int new_pc = [
    # Call. Use instruction constant
    icode == CALL : valC;
    # Taken branch. Use instruction constant
    icode == JXX && Bch : valC;
    # Completion of RET instruction. Use value from stack
    icode == RET : valM;
    # Default: Use incremented PC
    1 : valP;
];

# Set read control signal
bool mem_read = icode in { MRMOVL, POPL, RET };

# Set write control signal
bool mem_write = icode in { RMMOVL, PUSHL, CALL };

# Select memory address
int mem_addr = [
    icode in { RMMOVL, PUSHL, CALL, MRMOVL } : valE;
    icode in { POPL, RET } : valA;
    # Other instructions don't need address
];

# Select memory input data
int mem_data = [
    # Value from register
    icode in { RMMOVL, PUSHL } : valA;
    # Return PC
    icode == CALL : valP;
    # Default: Don't write anything
];

# Select input A to ALU
int aluA = [
    icode in { RRMOVL, OPL } : valA;
    icode in { IRMOVL, RMMOVL, MRMOVL, IOPL } : valC;
    icode in { CALL, PUSHL } : -4;
    icode in { RET, POPL } : 4;
    # Other instructions don't need ALU
];

# Select input B to ALU
int aluB = [
    icode in { RMMOVL, MRMOVL, OPL, IOPL, CALL, PUSHL, RET, POPL } : valB;
    icode in { RRMOVL, IRMOVL } : 0;
    # Other instructions don't need ALU
];

# Set the ALU function
int alufun = [
    icode in { OPL, IOPL } : ifun;
    1 : ALUADD;
];

# Should the condition codes be updated?
bool set_cc = icode in { OPL, IOPL };

# What register should be used as the A source?
int srcA = [
    icode in { RRMOVL, RMMOVL, OPL, PUSHL } : rA;
    icode in { POPL, RET } : RESP;
    1 : RNONE;  # Don't need register
];

# What register should be used as the B source?
int srcB = [
    icode in { OPL, IOPL, RMMOVL, MRMOVL } : rB;
    icode in { PUSHL, POPL, CALL, RET } : RESP;
    1 : RNONE;  # Don't need register
];

# What register should be used as the E destination?
int dstE = [
    icode in { RRMOVL, IRMOVL, OPL, IOPL } : rB;
    icode in { PUSHL, POPL, CALL, RET } : RESP;
    1 : RNONE;  # Don't need register
];

# What register should be used as the M destination?
int dstM = [
    icode in { MRMOVL, POPL } : rA;
    1 : RNONE;  # Don't need register
];